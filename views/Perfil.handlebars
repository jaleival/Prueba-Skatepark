<div class="py-4">
    <h2>Datos del perfil</h2>
    <hr class="w-50" />

    <form id="profileForm" method="PUT">
        <input type="hidden" name="id" value="{{user.id}}">

        <div class="form-group row w-50 m-auto">
            <div class="form-group col-12 col-sm-6">
                <label>Email</label>
                <input name="email" class="form-control m-auto" disabled value="{{user.email}}" />
            </div>
            <div class="form-group col-12 col-sm-6">
                <label>Nombre</label>
                <input name="nombre" class="form-control m-auto" value="{{user.nombre}}" />
            </div>
            <div class="form-group col-12 col-sm-6">
                <label>Password</label>
                <input name="password" type="password" class="form-control m-auto" value="{{user.password}}" />
            </div>
            <div class="form-group col-12 col-sm-6">
                <label>Repita la password</label>
                <input type="password" class="form-control m-auto" value="{{user.password}}" />
            </div>
            <div class="form-group col-12 col-sm-6">
                <label>Años de experiencia</label>
                <input name="años_experiencia" class="form-control m-auto" value="{{user.anos_experiencia}}" />
            </div>
            <div class="form-group col-12 col-sm-6">
                <label>Especialidad</label>
                <input name="especialidad" class="form-control m-auto" value="{{user.especialidad}}" />
            </div>
        </div>
        <div class="mb-1">
            <button type="submit" class="btn btn-primary" id="updateBtn">Actualizar</button>
        </div>
    </form>
    <button class="btn btn-danger" id="deleteBtn">Eliminar cuenta</button>
</div>

<script>
    const deleteBtn = document.getElementById("deleteBtn");
    const profileForm = document.getElementById("profileForm");

    deleteBtn.addEventListener("click", async () => {
        try {
            const { data: token } = await axios.delete(`/skaters/{{user.id}}`);
            alert("Usuario eliminado con éxito");
            window.location = "/login";
        } catch (error) {
            alert(error.message);
        }
    });

    profileForm.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(profileForm);
    const skater = Object.fromEntries(formData.entries());

    try {
        const response = await axios.put(`/perfil/${skater.id}`, skater);
        if (response.status === 200) {
            alert("Datos actualizados con éxito");
            window.location.href = "/";
        }
    } catch (error) {
        alert(error.message);
    }
});
</script>